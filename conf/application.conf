# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = service-configs

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

#swagger-uri requires CORSFilter
play.filters.enabled += "play.filters.cors.CORSFilter"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.serviceconfigs.Module"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "play.modules.swagger.SwaggerModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    artefact-processor {
      host = "localhost"
      port = 9000
    }

    auth {
      host = localhost
      port = 8500
    }

    service-dependencies {
      host = "localhost"
      port = 8459
    }

    releases-api {
      host = localhost
      port = 8008
    }

    teams-and-repositories {
      host = "localhost"
      port = 9015
    }
  }
}


mongodb {
  uri = "mongodb://localhost:27017/service-configs"
}

bobby {
  url = "https://raw.githubusercontent.com/hmrc/bobby-config/main/deprecated-dependencies.json"
}

artefact {
  receiver {
    enabled              = false
    aws.sqs.queue-prefix = "change_me"
    aws.sqs.queue-slug   = "change_me"
  }
}

nginx {
  config-repo = "mdtp-frontend-routes"
  config-repo-branch = "HEAD"
  config-files = ["frontend-proxy-application-rules.conf", "devhub-application-rules.conf"]
  shutter-killswitch-path = "/etc/nginx/switches/mdtp/offswitch"
  shutter-serviceswitch-path-prefix = "/etc/nginx/switches/mdtp/"
}

config-scheduler {
  enabled      = false
  interval     = 10.minutes
  initialDelay = 1.second
}

missed-webhook-events-scheduler {
  enabled      = false
  interval     = 2.hours
  initialDelay = 1.second
}

slug-metadata-scheduler {
  enabled      = false
  interval     = 10.minutes
  initialDelay = 1.second
}

artifactory {
  url = "change-me"
}

github {
  open {
    api {
      key    = "key_not_set"
      apiurl = "https://api.github.com"
      rawurl = "https://raw.githubusercontent.com"
    }
  }
}

################################################################################################
# Swagger configuration

# Setup cors filters for the swagger-ui
play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = ["http://localhost:8009"] #CORS access only allowed from the swagger server
  allowedHttpMethods = ["GET", "POST"]
  allowedHttpHeaders = null
  preflightMaxAge = 3.days
}

# Setup swagger config used by the plugin
api.version = ${?APP_VERSION}   #Set via env var, injected automatically on k8s
swagger.api.info {
  description = "Endpoints exposed by the service-configs microservice"
  title = "service-configs"
  contact = "#team-platops"
}
################################################################################################
