# microservice specific routes
GET     /internal-auth-config/:serviceName              uk.gov.hmrc.serviceconfigs.controller.InternalAuthConfigController.internalAuthConfig(serviceName: ServiceName)
GET     /config-by-env/:serviceName                     uk.gov.hmrc.serviceconfigs.controller.ConfigController.serviceConfig(serviceName: ServiceName, environment: Seq[Environment], version: Option[Version], latest: Boolean ?= true)
GET     /search                                         uk.gov.hmrc.serviceconfigs.controller.ConfigController.search(key: Option[String], keyFilterType: FilterType ?= FilterType.Contains, value: Option[String], valueFilterType: FilterType ?= FilterType.Contains, environment: Seq[Environment], teamName: Option[TeamName], serviceType: Option[ServiceType], tag: List[Tag])
GET     /configkeys                                     uk.gov.hmrc.serviceconfigs.controller.ConfigController.configKeys(teamName: Option[TeamName])
GET     /warnings                                       uk.gov.hmrc.serviceconfigs.controller.ConfigController.warnings(serviceName: ServiceName, environment: Seq[Environment], version: Option[Version] ?= None, latest: Boolean)

GET     /deployment-events/:serviceName                 uk.gov.hmrc.serviceconfigs.controller.ConfigController.deploymentEvents(serviceName: ServiceName, range: DeploymentDateRange)
GET     /config-changes                                 uk.gov.hmrc.serviceconfigs.controller.ConfigController.configChanges(deploymentId: String, fromDeploymentId: Option[String])
GET     /config-changes-next-deployment                 uk.gov.hmrc.serviceconfigs.controller.ConfigController.configChangesNextDeployment(serviceName: ServiceName, environment: Environment, version: Version)

GET     /routes                                         uk.gov.hmrc.serviceconfigs.controller.RouteConfigurationController.routes(serviceName: Option[ServiceName] ?= None, environment: Option[Environment] ?= None, routeType: Option[RouteType] ?= None)
GET     /frontend-routes/search                         uk.gov.hmrc.serviceconfigs.controller.RouteConfigurationController.searchByFrontendPath(frontendPath: String)
GET     /shuttering-routes/:environment                 uk.gov.hmrc.serviceconfigs.controller.RouteConfigurationController.shutteringRoutes(environment: Environment)

GET     /bobby/rules                                    uk.gov.hmrc.serviceconfigs.controller.BobbyRulesController.allRules
GET     /alert-configs                                  uk.gov.hmrc.serviceconfigs.controller.AlertConfigController.getAlertConfigs()
GET     /alert-configs/:serviceName                     uk.gov.hmrc.serviceconfigs.controller.AlertConfigController.getAlertConfigForService(serviceName: ServiceName)

GET     /deployment-config                              uk.gov.hmrc.serviceconfigs.controller.DeploymentConfigController.deploymentConfig(environment: Seq[Environment], serviceName: Option[ServiceName], teamName: Option[TeamName], applied: Boolean)

GET     /resource-usage/services/:serviceName/snapshots uk.gov.hmrc.serviceconfigs.controller.ResourceUsageController.resourceUsageSnapshotsForService(serviceName: ServiceName)

GET     /grafana-dashboards/:serviceName                uk.gov.hmrc.serviceconfigs.controller.DashboardController.grafana(serviceName: ServiceName)
GET     /kibana-dashboards/:serviceName                 uk.gov.hmrc.serviceconfigs.controller.DashboardController.kibana(serviceName: ServiceName)

GET     /build-jobs/:serviceName                        uk.gov.hmrc.serviceconfigs.controller.BuildJobController.buildJob(serviceName: ServiceName)

GET     /service-relationships/:serviceName             uk.gov.hmrc.serviceconfigs.controller.ServiceRelationshipController.serviceRelationships(serviceName: ServiceName)

POST    /webhook                                        uk.gov.hmrc.serviceconfigs.controller.WebhookController.processGithubWebhook

GET     /outage-pages/:serviceName                      uk.gov.hmrc.serviceconfigs.controller.OutagePageController.searchByServiceName(serviceName: ServiceName)

GET     /services/:serviceName/config-location          uk.gov.hmrc.serviceconfigs.controller.ConfigLocationController.configLocation(serviceName: ServiceName)
GET     /services/repo-name                             uk.gov.hmrc.serviceconfigs.controller.ConfigController.repoNameForService(serviceName: Option[ServiceName], artefactName: Option[ArtefactName])
